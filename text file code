package com.example.breviarev2;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.google.firebase.auth.FirebaseAuth;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.text.SimpleDateFormat;
import java.util.Locale;

 public class HomePageActivity extends AppCompatActivity {

    private FirebaseAuth firebaseAuth;
    private Button logout;
    private Button summarize;

    private EditText input;
    private Button save;
    private String mText;
    private static final int WRITE_EXTERNAL_STORAGE_CODE = 1;

     @Override
    protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_home_page);

         firebaseAuth = FirebaseAuth.getInstance();

         logout = (Button) findViewById(R.id.btnLogout);
         summarize = (Button) findViewById(R.id.btnLogout);

         input = findViewById(R.id.InputText);
         save = findViewById(R.id.Btnsave);

         save.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 mText = input.getText().toString().trim();

                 if(mText.isEmpty()){
                     Toast.makeText(HomePageActivity.this, "Please enter something", Toast.LENGTH_SHORT).show();
                 }
                 else{
                      if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.M){
                          if(checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)
                          == PackageManager.PERMISSION_DENIED){
                              String[] permissions = {Manifest.permission.WRITE_EXTERNAL_STORAGE};
                              requestPermissions(permissions, WRITE_EXTERNAL_STORAGE_CODE);
                          }
                          else{
                              saveToTxtFile(mText);
                          }
                      }
                      else{
                          saveToTxtFile(mText);
                      }

                 }
             }
         });

         summarize.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 startActivity(new Intent(HomePageActivity.this, SummarizeActivity.class));
             }
         });x

         logout.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 Logout();
             }
         });
     }

     @Override
     public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {


         super.onRequestPermissionsResult(requestCode, permissions, grantResults);
         switch (requestCode) {
             case WRITE_EXTERNAL_STORAGE_CODE: {
                 if (grantResults.length > 0 && grantResults[0]
                         == PackageManager.PERMISSION_GRANTED) {
                     saveToTxtFile(mText);
                 } else {
                     Toast.makeText(this, "Storage permission is required", Toast.LENGTH_SHORT).show();
                 }
             }
         }

     }

     private void saveToTxtFile(String mText) {
         String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss", Locale.getDefault()).format(System.currentTimeMillis());

         try {
             File path = Environment.getExternalStorageDirectory();
             File dir = new File(path + "/MyFiles/");
             dir.mkdirs();

             String fileName = "MyFile_" + timeStamp + ".txt";

             File file = new File(dir, fileName);
             FileWriter fw = new FileWriter(file.getAbsoluteFile());
             BufferedWriter bw = new BufferedWriter(fw);
             bw.write(mText);
             bw.close();

             Toast.makeText(this, fileName+" is saved to \n" + dir, Toast.LENGTH_SHORT).show();

         }
         catch (Exception e){
             Toast.makeText(this, "error!", Toast.LENGTH_SHORT).show();

         }
     }

     private void Logout(){
         firebaseAuth.signOut();
         finish();
         startActivity(new Intent(HomePageActivity.this, MainActivity.class));
     }
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getMenuInflater().inflate(R.menu.menu, menu);
         return true;
         }

     @Override
     public boolean onOptionsItemSelected(@NonNull MenuItem item) {

         switch(item.getItemId()){
             case R.id.logoutMenu:{
                 Logout();
             }
         }
         return super.onOptionsItemSelected(item);
     }
 }
